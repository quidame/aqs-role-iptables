---
# role: iptables
# file: defaults/main.yml
#
# This file should declare all or almost all variables of the role, describe
# them, provide examples and a safe default value for each.  A variable that
# is defined here may be overridden anywhere else, this place having the lowest
# precedence/priority/weight.
#
# All variables of this role should have a name of the form:
# iptables__foo
# with two underscores between the role name (that is a prefix) and `foo`, i.e.
# what this variable is supposed to be for, as in:
# iptables__login: admin
# iptables__base_url: https://iptables.qssdk.lab


################################################################################
## iptables__action
#
# Define the main behaviour of the role. Valid values are 'setup' (the default)
# and 'unset'.  Depending of the role scope, this may be understood as install/
# uninstall, configure/unconfigure, start/stop, present/absent, create/remove,
# and so on.
#
iptables__action: setup
#iptables__action: rules (the same)
#
#iptables__action: unset
#iptables__action: flush (the same)


################################################################################
## iptables__rules
#
# A list of dictionnaries describing iptables (netfilter) rules and matching
# iptables (ansible module) parameters.
#
# This example builds a firewall from scratch for a DNS/DHCP/TFTP and also NTP
# server:
#iptables__rules:
#  - { chain: "INPUT", policy: "ACCEPT" }
#  - { chain: "OUTPUT", policy: "ACCEPT" }
#  - { chain: "FORWARD", policy: "DROP" }
#  - { flush: true }
#  - { chain: "INPUT", ctstate: "INVALID", jump: "DROP" }
#  - { chain: "INPUT", ctstate: "RELATED,ESTABLISHED", jump: "ACCEPT" }
#  - { chain: "INPUT", in_interface: "lo", jump: "ACCEPT" }
#  - { chain: "INPUT", protocol: "icmp", jump: "ACCEPT" }
#  - { chain: "INPUT", protocol: "udp", source_port: "68", destination_port: "67", comment: "DHCP", jump: "ACCEPT" }
#  - { chain: "INPUT", protocol: "udp", source_port: "0:1023", comment: "bad source port", jump: "DROP" }
#  - { chain: "INPUT", protocol: "tcp", source_port: "0:1023", comment: "bad source port", jump: "DROP" }
#  - { chain: "INPUT", protocol: "tcp", syn: "negate", ctstate: "NEW", comment: "bad NEWs", jump: "DROP" }
#  - { chain: "INPUT", protocol: "tcp", destination_port: "22", comment: "SSH", jump: "ACCEPT" }
#  - { chain: "INPUT", protocol: "udp", destination_port: "53", comment: "DNS", jump: "ACCEPT" }
#  - { chain: "INPUT", protocol: "udp", destination_port: "69", comment: "TFTP", jump: "ACCEPT" }
#  - { chain: "INPUT", protocol: "udp", destination_port: "123", comment: "NTP", jump: "ACCEPT" }
#  - { chain: "INPUT", policy: "DROP" }
#  - { chain: "OUTPUT", ctstate: "INVALID", jump: "DROP" }
#  - { chain: "OUTPUT", ctstate: "RELATED,ESTABLISHED", jump: "ACCEPT" }
#
iptables__rules: []


################################################################################
## iptables__ruleset_*
#
# Lists of rulesets with same format than iptables__rules.
#
iptables__ruleset_flush:
  - { chain: "INPUT", policy: "ACCEPT" }
  - { chain: "OUTPUT", policy: "ACCEPT" }
  - { chain: "FORWARD", policy: "ACCEPT" }
  - { flush: true }

iptables__ruleset_basic:
  - { chain: "OUTPUT", ctstate: "INVALID", jump: "DROP" }
  - { chain: "OUTPUT", ctstate: "RELATED,ESTABLISHED", jump: "ACCEPT" }
  - { chain: "INPUT", ctstate: "INVALID", jump: "DROP" }
  - { chain: "INPUT", ctstate: "RELATED,ESTABLISHED", jump: "ACCEPT" }
  - { chain: "INPUT", in_interface: "lo", jump: "ACCEPT" }
  - { chain: "INPUT", protocol: "icmp", jump: "ACCEPT" }
  - { chain: "INPUT", protocol: "udp", source_port: "0:1023", comment: "bad source port", jump: "DROP" }
  - { chain: "INPUT", protocol: "tcp", source_port: "0:1023", comment: "bad source port", jump: "DROP" }
  - { chain: "INPUT", protocol: "tcp", syn: "negate", ctstate: "NEW", comment: "bad NEWs", jump: "DROP" }
  - { chain: "INPUT", protocol: "tcp", destination_port: "{{ ansible_ssh_port | default(22) }}", comment: "SSH", jump: "ACCEPT" }
  - { chain: "INPUT", policy: "DROP" }
  - { chain: "FORWARD", policy: "DROP" }

iptables__ruleset_reset: "{{ iptables__ruleset_flush + iptables__ruleset_basic }}"
